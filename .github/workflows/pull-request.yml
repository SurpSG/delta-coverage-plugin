name: Pull Request

on:
  pull_request:
    branches:
      - '*'

env:
  gradle_cmd: "./gradlew -Pgithub --no-daemon --parallel --console=plain --no-watch-fs -s "

jobs:

  build-and-test:
    uses: ./.github/workflows/base-ci.yml

  delta-coverage-check:
    needs: build-and-test
    runs-on: ubuntu-latest

    permissions:
      contents: read
      issues: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Pull artifacts
        uses: actions/download-artifact@master
        with:
          name: tests-artifacts
          path: tests-artifacts

      - name: Populate cache
        run: cp -r tests-artifacts/* . && ls -la delta-coverage-core/build/classes && ls -la delta-coverage-gradle/build/kover/bin-reports

      - name: Add test results to PR
        uses: EnricoMi/publish-unit-test-result-action@v2.7.0
        if: always()
        continue-on-error: true
        with:
          files: "tests-artifacts/**/test-results/**/*.xml"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Delta Coverage check
        continue-on-error: ${{ contains(github.event.pull_request.labels.*.name, 'suppress-delta-coverage') }}
        run: ${gradle_cmd} deltaCoverage -PdiffBase="refs/remotes/origin/$GITHUB_BASE_REF" -x test -x functionalTest

      - name: Add Delta Coverage report to PR
        id: coverage-in-PR
        uses: madrapps/jacoco-report@v1.5
        if: always()
        continue-on-error: true
        with:
          paths: build/reports/coverage-reports/delta-coverage/report.xml
          token: ${{ secrets.GITHUB_TOKEN }}
